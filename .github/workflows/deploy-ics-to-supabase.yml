name: Deploy ICS to Supabase

on:
  push:
    branches:
      - main    # Deploy to Main bucket on the main branch
      - staging # Deploy to Staging bucket on the staging branch
      - dev     # Deploy to Dev bucket on the dev branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set environment variables based on the branch
      - name: Set Variables
        id: set-vars
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "BUCKET_NAME=LiturgicalCalendarsMain" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "BUCKET_NAME=LiturgicalCalendarsStaging" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "BUCKET_NAME=LiturgicalCalendarsDev" >> $GITHUB_ENV
          fi
          echo "FILE_PATH=WesternRite/LiturgicalCalendarWesterRite.ics" >> $GITHUB_ENV
          echo "FILE_NAME=LiturgicalCalendarWesterRite.ics" >> $GITHUB_ENV

      # Debugging step to confirm variables
      - name: Debug Info
        run: |
          echo "Bucket Name: $BUCKET_NAME"
          echo "File Path: $FILE_PATH"
          echo "File Name: $FILE_NAME"
          echo "Supabase URL: $SUPABASE_URL"

      # Upload the file directly to the root of the bucket
      - name: Upload .ics to Supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          if [[ -f "$FILE_PATH" ]]; then
            curl -X POST "${SUPABASE_URL}/storage/v1/object/${BUCKET_NAME}/${FILE_NAME}" \
              -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
              -H "Content-Type: text/calendar" \
              --data-binary @"$FILE_PATH"
          else
            echo "File not found: $FILE_PATH"
            exit 1
          fi

      # Optionally generate a signed URL for the uploaded file
      - name: Generate Signed URL (Optional)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          RESPONSE=$(curl -s -X POST "${SUPABASE_URL}/storage/v1/object/sign/${BUCKET_NAME}/${FILE_NAME}" \
            -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
            -H "Content-Type: application/json" \
            -d '{"expiresIn": 604800}') # Signed URL valid for 7 days (604800 seconds)
          echo "Signed URL: $RESPONSE"
